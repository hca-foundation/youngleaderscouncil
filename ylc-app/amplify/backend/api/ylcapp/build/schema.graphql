type NonProfit {
  id: ID!
  IsPartner: Boolean!
  RequiresApproval: Boolean!
  OrganizationLegalName: String
  County: String
  MissionStatement: String
  ImpactArea: String
  Website: AWSURL
  CurrentFYEndDate: AWSDate
  CEOFirstName: String
  CEOLastName: String
  CEOEmail: AWSEmail
  BoardChairFirstName: String
  BoardChairLastName: String
  BoardChairEmail: AWSEmail
  BoardTermLengths: Int
  BoardTermLimits: Int
  WhatMakesYourBoardUnique: String
  PercentOfBoardMakingMonetaryContributions: Int
  PercentOfBoardMakingInKindContributions: Int
  WrittenBoardSelectionCriteria: String
  WrittenConflictOfInterestPolicy: String
  BoardDemographicsAfricanAmericanBlack: Int
  BoardDemographicsAsian: Int
  BoardDemographicsWhite: Int
  BoardDemographicsHispanicLatinx: Int
  BoardDemographicsMultiracial: Int
  BoardDemographicsNativeAmerican: Int
  BoardDemographicsPacificIslander: Int
  BoardDemographicsOtherEthnicity: String
  BoardDemographicsMale: Int
  BoardDemographicsFemale: Int
  BoardDemographicsSelfDescribe: Int
  BoardDemographicsPreferNotToSay: Int
  UniqueOrganizationURLLink: AWSURL
  DonorEdgeStatus: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelNonProfitConnection {
  items: [NonProfit]
  nextToken: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelNonProfitFilterInput {
  id: ModelIDInput
  IsPartner: ModelBooleanInput
  RequiresApproval: ModelBooleanInput
  OrganizationLegalName: ModelStringInput
  County: ModelStringInput
  MissionStatement: ModelStringInput
  ImpactArea: ModelStringInput
  Website: ModelStringInput
  CurrentFYEndDate: ModelStringInput
  CEOFirstName: ModelStringInput
  CEOLastName: ModelStringInput
  CEOEmail: ModelStringInput
  BoardChairFirstName: ModelStringInput
  BoardChairLastName: ModelStringInput
  BoardChairEmail: ModelStringInput
  BoardTermLengths: ModelIntInput
  BoardTermLimits: ModelIntInput
  WhatMakesYourBoardUnique: ModelStringInput
  PercentOfBoardMakingMonetaryContributions: ModelIntInput
  PercentOfBoardMakingInKindContributions: ModelIntInput
  WrittenBoardSelectionCriteria: ModelStringInput
  WrittenConflictOfInterestPolicy: ModelStringInput
  BoardDemographicsAfricanAmericanBlack: ModelIntInput
  BoardDemographicsAsian: ModelIntInput
  BoardDemographicsWhite: ModelIntInput
  BoardDemographicsHispanicLatinx: ModelIntInput
  BoardDemographicsMultiracial: ModelIntInput
  BoardDemographicsNativeAmerican: ModelIntInput
  BoardDemographicsPacificIslander: ModelIntInput
  BoardDemographicsOtherEthnicity: ModelStringInput
  BoardDemographicsMale: ModelIntInput
  BoardDemographicsFemale: ModelIntInput
  BoardDemographicsSelfDescribe: ModelIntInput
  BoardDemographicsPreferNotToSay: ModelIntInput
  UniqueOrganizationURLLink: ModelStringInput
  DonorEdgeStatus: ModelStringInput
  and: [ModelNonProfitFilterInput]
  or: [ModelNonProfitFilterInput]
  not: ModelNonProfitFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getNonProfit(id: ID!): NonProfit
  listNonProfits(filter: ModelNonProfitFilterInput, limit: Int, nextToken: String): ModelNonProfitConnection
}

input CreateNonProfitInput {
  id: ID
  IsPartner: Boolean!
  RequiresApproval: Boolean!
  OrganizationLegalName: String
  County: String
  MissionStatement: String
  ImpactArea: String
  Website: AWSURL
  CurrentFYEndDate: AWSDate
  CEOFirstName: String
  CEOLastName: String
  CEOEmail: AWSEmail
  BoardChairFirstName: String
  BoardChairLastName: String
  BoardChairEmail: AWSEmail
  BoardTermLengths: Int
  BoardTermLimits: Int
  WhatMakesYourBoardUnique: String
  PercentOfBoardMakingMonetaryContributions: Int
  PercentOfBoardMakingInKindContributions: Int
  WrittenBoardSelectionCriteria: String
  WrittenConflictOfInterestPolicy: String
  BoardDemographicsAfricanAmericanBlack: Int
  BoardDemographicsAsian: Int
  BoardDemographicsWhite: Int
  BoardDemographicsHispanicLatinx: Int
  BoardDemographicsMultiracial: Int
  BoardDemographicsNativeAmerican: Int
  BoardDemographicsPacificIslander: Int
  BoardDemographicsOtherEthnicity: String
  BoardDemographicsMale: Int
  BoardDemographicsFemale: Int
  BoardDemographicsSelfDescribe: Int
  BoardDemographicsPreferNotToSay: Int
  UniqueOrganizationURLLink: AWSURL
  DonorEdgeStatus: String
}

input UpdateNonProfitInput {
  id: ID!
  IsPartner: Boolean
  RequiresApproval: Boolean
  OrganizationLegalName: String
  County: String
  MissionStatement: String
  ImpactArea: String
  Website: AWSURL
  CurrentFYEndDate: AWSDate
  CEOFirstName: String
  CEOLastName: String
  CEOEmail: AWSEmail
  BoardChairFirstName: String
  BoardChairLastName: String
  BoardChairEmail: AWSEmail
  BoardTermLengths: Int
  BoardTermLimits: Int
  WhatMakesYourBoardUnique: String
  PercentOfBoardMakingMonetaryContributions: Int
  PercentOfBoardMakingInKindContributions: Int
  WrittenBoardSelectionCriteria: String
  WrittenConflictOfInterestPolicy: String
  BoardDemographicsAfricanAmericanBlack: Int
  BoardDemographicsAsian: Int
  BoardDemographicsWhite: Int
  BoardDemographicsHispanicLatinx: Int
  BoardDemographicsMultiracial: Int
  BoardDemographicsNativeAmerican: Int
  BoardDemographicsPacificIslander: Int
  BoardDemographicsOtherEthnicity: String
  BoardDemographicsMale: Int
  BoardDemographicsFemale: Int
  BoardDemographicsSelfDescribe: Int
  BoardDemographicsPreferNotToSay: Int
  UniqueOrganizationURLLink: AWSURL
  DonorEdgeStatus: String
}

input DeleteNonProfitInput {
  id: ID
}

type Mutation {
  createNonProfit(input: CreateNonProfitInput!, condition: ModelNonProfitConditionInput): NonProfit
  updateNonProfit(input: UpdateNonProfitInput!, condition: ModelNonProfitConditionInput): NonProfit
  deleteNonProfit(input: DeleteNonProfitInput!, condition: ModelNonProfitConditionInput): NonProfit
}

input ModelNonProfitConditionInput {
  IsPartner: ModelBooleanInput
  RequiresApproval: ModelBooleanInput
  OrganizationLegalName: ModelStringInput
  County: ModelStringInput
  MissionStatement: ModelStringInput
  ImpactArea: ModelStringInput
  Website: ModelStringInput
  CurrentFYEndDate: ModelStringInput
  CEOFirstName: ModelStringInput
  CEOLastName: ModelStringInput
  CEOEmail: ModelStringInput
  BoardChairFirstName: ModelStringInput
  BoardChairLastName: ModelStringInput
  BoardChairEmail: ModelStringInput
  BoardTermLengths: ModelIntInput
  BoardTermLimits: ModelIntInput
  WhatMakesYourBoardUnique: ModelStringInput
  PercentOfBoardMakingMonetaryContributions: ModelIntInput
  PercentOfBoardMakingInKindContributions: ModelIntInput
  WrittenBoardSelectionCriteria: ModelStringInput
  WrittenConflictOfInterestPolicy: ModelStringInput
  BoardDemographicsAfricanAmericanBlack: ModelIntInput
  BoardDemographicsAsian: ModelIntInput
  BoardDemographicsWhite: ModelIntInput
  BoardDemographicsHispanicLatinx: ModelIntInput
  BoardDemographicsMultiracial: ModelIntInput
  BoardDemographicsNativeAmerican: ModelIntInput
  BoardDemographicsPacificIslander: ModelIntInput
  BoardDemographicsOtherEthnicity: ModelStringInput
  BoardDemographicsMale: ModelIntInput
  BoardDemographicsFemale: ModelIntInput
  BoardDemographicsSelfDescribe: ModelIntInput
  BoardDemographicsPreferNotToSay: ModelIntInput
  UniqueOrganizationURLLink: ModelStringInput
  DonorEdgeStatus: ModelStringInput
  and: [ModelNonProfitConditionInput]
  or: [ModelNonProfitConditionInput]
  not: ModelNonProfitConditionInput
}

type Subscription {
  onCreateNonProfit: NonProfit @aws_subscribe(mutations: ["createNonProfit"])
  onUpdateNonProfit: NonProfit @aws_subscribe(mutations: ["updateNonProfit"])
  onDeleteNonProfit: NonProfit @aws_subscribe(mutations: ["deleteNonProfit"])
}
